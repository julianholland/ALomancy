Metadata-Version: 2.4
Name: alomancy
Version: 0.1.dev16+gaa94b57.d20250806
Summary: Active Learning framework for atomistic simulations with MACE using wfl
Author-email: Julian Holland <your.email@example.com>
License: MIT
Project-URL: Homepage, https://github.com/julianholland/ALomancy
Project-URL: Repository, https://github.com/julianholland/ALomancy
Project-URL: Documentation, https://alomancy.readthedocs.io
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Chemistry
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: ase>=3.22.0
Requires-Dist: numpy>=1.21.0
Requires-Dist: pandas>=1.3.0
Requires-Dist: matplotlib>=3.5.0
Requires-Dist: scipy>=1.7.0
Requires-Dist: wfl
Requires-Dist: expyre
Requires-Dist: mace-torch
Provides-Extra: dev
Requires-Dist: pytest>=6.0; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: isort; extra == "dev"
Requires-Dist: flake8; extra == "dev"
Requires-Dist: mypy; extra == "dev"
Provides-Extra: docs
Requires-Dist: sphinx; extra == "docs"
Requires-Dist: sphinx-rtd-theme; extra == "docs"
Requires-Dist: sphinxcontrib-napoleon; extra == "docs"

<div align="center">
  <h1><code>ALomancy</code>ðŸ”®</h1>
  <p><i>An active learning package using wfl for MACE</i></p>
</div>

***
## Key Features ðŸŽ°

- Modular AL routines
- Easy means to switch between multiple HPCs during the workflow
- Consistant evaluation


## Package Layout

```
ALomancy/
â”œâ”€â”€ pyproject.toml                 # Modern Python packaging
â”œâ”€â”€ README.md                      # Package documentation
â”œâ”€â”€ LICENSE                        # License file
â”œâ”€â”€ .gitignore                     # Git ignore file
â”œâ”€â”€ alomancy/                      # Main package directory
â”‚   â”œâ”€â”€ __init__.py               # Package initialization
â”‚   â”œâ”€â”€ version.py                # Version information
â”‚   â”œâ”€â”€ config/                   # Configuration management
â”‚   â”‚   â”œâ”€â”€ __init__.py
â”‚   â”‚   â”œâ”€â”€ defaults.py           # Default configurations
â”‚   â”‚   â””â”€â”€ systems.py            # HPC system configurations
â”‚   â”œâ”€â”€ core/                     # Core functionality
â”‚   â”‚   â”œâ”€â”€ __init__.py
â”‚   â”‚   â”œâ”€â”€ active_learning.py    # Main AL workflow (from al_wfl.py)
â”‚   â”‚   â””â”€â”€ remote_info.py        # Remote execution utilities
â”‚   â”œâ”€â”€ md/                       # Molecular dynamics
â”‚   â”‚   â”œâ”€â”€ __init__.py
â”‚   â”‚   â”œâ”€â”€ workflows.py          # MD workflows (from md_wfl.py)
â”‚   â”‚   â””â”€â”€ structure_selection.py # Structure selection logic
â”‚   â”œâ”€â”€ dft/                      # DFT calculations
â”‚   â”‚   â”œâ”€â”€ __init__.py
â”‚   â”‚   â””â”€â”€ workflows.py          # DFT workflows (from dft_wfl.py)
â”‚   â”œâ”€â”€ mace/                     # MACE-specific functionality
â”‚   â”‚   â”œâ”€â”€ __init__.py
â”‚   â”‚   â””â”€â”€ training.py           # MACE training workflows
â”‚   â”œâ”€â”€ analysis/                 # Analysis and plotting
â”‚   â”‚   â”œâ”€â”€ __init__.py
â”‚   â”‚   â”œâ”€â”€ plotting.py           # Plotting utilities
â”‚   â”‚   â””â”€â”€ metrics.py            # Analysis metrics
â”‚   â”œâ”€â”€ utils/                    # Utility functions
â”‚   â”‚   â”œâ”€â”€ __init__.py
â”‚   â”‚   â”œâ”€â”€ io.py                 # File I/O utilities
â”‚   â”‚   â””â”€â”€ structures.py         # Structure manipulation
â”‚   â””â”€â”€ cli/                      # Command-line interface
â”‚       â”œâ”€â”€ __init__.py
â”‚       â””â”€â”€ main.py               # CLI entry points
â”œâ”€â”€ tests/                        # Test suite
â”‚   â”œâ”€â”€ __init__.py
â”‚   â”œâ”€â”€ test_core/
â”‚   â”œâ”€â”€ test_md/
â”‚   â”œâ”€â”€ test_dft/
â”‚   â””â”€â”€ test_analysis/
â”œâ”€â”€ docs/                         # Documentation
â”‚   â”œâ”€â”€ conf.py
â”‚   â”œâ”€â”€ index.rst
â”‚   â””â”€â”€ tutorials/
â”œâ”€â”€ examples/                     # Example scripts
â”‚   â”œâ”€â”€ basic_workflow.py
â”‚   â””â”€â”€ advanced_workflow.py
â””â”€â”€ configs/                      # Configuration files
    â”œâ”€â”€ systems/
    â”‚   â”œâ”€â”€ raven.json
    â”‚   â”œâ”€â”€ nersc.json
    â”‚   â””â”€â”€ fhi-raccoon.json
    â””â”€â”€ job_defaults.json
```
